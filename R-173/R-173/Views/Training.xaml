<local:UserControlWithMessage x:Class="R_173.Views.Training"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:R_173.Views"
      xmlns:radio="clr-namespace:R_173.Views.Radio"
      xmlns:trainingSteps="clr-namespace:R_173.Views.TrainingSteps"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:viewModels="clr-namespace:R_173.ViewModels"
      mc:Ignorable="d" 
      d:DesignHeight="900" d:DesignWidth="1280" d:DataContext="{d:DesignInstance {x:Type viewModels:TrainingViewModel}}"
      FontFamily="Times New Roman">
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="/Files/armour-wallpaper4.png" Stretch="UniformToFill" />
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
            
        <!--Top-->
        <Grid Grid.Row="0" DockPanel.Dock="Top" Margin="5" UseLayoutRounding="True">
            <!-- <Grid.Resources> -->
            <!--     <Style TargetType="Button"> -->
            <!--         <Setter Property="Margin" Value="5" /> -->
            <!--         <Setter Property="Padding" Value="5" /> -->
            <!--         <Setter Property="FontSize" Value="20" /> -->
            <!--         <Setter Property="Focusable" Value="False" /> -->
            <!--         <Setter Property="FontWeight" Value="Bold" /> -->
            <!--         <Setter Property="Cursor" Value="Hand" /> -->
            <!--         <Setter Property="Template"> -->
            <!--             <Setter.Value> -->
            <!--                 <ControlTemplate TargetType="{x:Type Button}"> -->
            <!--                     <Border x:Name="Border" Background="#98CA69" Padding="7"> -->
            <!--                         ~1~<Viewbox Stretch="Uniform">@1@ -->
            <!--                             <TextBlock x:Name="Text" HorizontalAlignment="Center" VerticalAlignment="Center" -->
            <!--                                     Text="{TemplateBinding Content}" -->
            <!--                                     Foreground="White" /> -->
            <!--                         ~1~</Viewbox>@1@ -->
            <!--                     </Border> -->
            <!--                     <ControlTemplate.Triggers> -->
            <!--                         <Trigger Property="IsMouseOver" Value="True"> -->
            <!--                             <Setter TargetName="Border" Property="Background" Value="#C8E28E" /> -->
            <!--                         </Trigger> -->
            <!--                         <Trigger Property="IsPressed" Value="True"> -->
            <!--                             <Setter TargetName="Border" Property="Background" Value="#92C266" /> -->
            <!--                         </Trigger> -->
            <!--                         <Trigger Property="IsEnabled" Value="False"> -->
            <!--                             <Setter TargetName="Border" Property="Background" Value="#C9CED1" /> -->
            <!--                         </Trigger> -->
            <!--                     </ControlTemplate.Triggers> -->
            <!--                 </ControlTemplate> -->
            <!--             </Setter.Value> -->
            <!--         </Setter> -->
            <!--     </Style> -->
            <!-- </Grid.Resources> -->

            <Grid.ColumnDefinitions>
                <!--<ColumnDefinition Width="*" />-->
                <ColumnDefinition Width="270" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="270" />
                <!--<ColumnDefinition Width="*" />-->
            </Grid.ColumnDefinitions>

            <!--<Button Grid.Column="0" Content="Предыдущий шаг" Command="{Binding Path=OpenPrevStepCommand}" />-->
            <Button Grid.Column="0" Content="Начать заново" ToolTip="Начать обучение заново" Command="{Binding Path=StartOverCommand}" />
            <!--<Button Grid.Column="4" Content="Следующий шаг" Command="{Binding Path=OpenNextStepCommand}" />-->
            <Button Grid.Column="2" Content="Изменить положение задач" Command="{Binding Path=ChangeOrientationCommand}" />

            <!--<Viewbox Grid.Column="1" Stretch="Uniform" MaxHeight="50" >-->
            <TextBlock Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="30" FontWeight="Bold">
                <TextBlock.Effect>
                    <DropShadowEffect Color="White" ShadowDepth="0" />
                </TextBlock.Effect>
                    
                <Run Text="{Binding Path=CurrentStep, Mode=OneWay}" />
                <Run Text="/" />
                <Run Text="{Binding Path=StepsNumber, Mode=OneTime}" />
                <Run Text="{Binding Path=Caption, Mode=OneWay}" />
            </TextBlock>
            <!--</Viewbox>-->
        </Grid>
        <!--Radio-->
        <Grid Grid.Row="2">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation}" Value="Vertical">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <radio:RadioView DataContext="{Binding Path=RadioViewModel}" />
        </Grid>
        <!--Horizontal tasks-->
        <Viewbox Grid.Row="1" Stretch="Uniform" MouseMove="Viewbox_MouseMove" MouseLeave="Viewbox_MouseLeave">
            <Viewbox.Style>
                <Style TargetType="{x:Type Viewbox}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation}" Value="Horizontal">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Viewbox.Style>

            <ContentControl Grid.Row="1" Content="{Binding Path=CurrentHorizontalControl}" />
        </Viewbox>
        <!--Vertical tasks-->
        <Grid Grid.Row="2" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10*" />
                <ColumnDefinition Width="9*" />
            </Grid.ColumnDefinitions>

            <Border xmlns:gif="http://wpfanimatedgif.codeplex.com">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Grid.Column" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Orientation}" Value="Horizontal">
                                <Setter Property="Grid.Column" Value="1" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <ContentControl Content="{Binding Path=CurrentToolTip}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type system:String}">
                            <TextBlock Text="{Binding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </DataTemplate>
                        <trainingSteps:PathConverter x:Key="PathConverter" />
                        <DataTemplate DataType="{x:Type trainingSteps:Prompt}">
                            <Grid MinWidth="100" MinHeight="100" Background="#EEFFFFFF">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="18*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                
                                <Grid Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Image Grid.Row="0"
                                        gif:ImageBehavior.AnimatedSource="{Binding Path=GifSource, Converter={StaticResource PathConverter}}" />
                                    <TextBlock Grid.Row="1" Text="{Binding Path=Text}" 
                                                FontSize="40" TextAlignment="Center" 
                                                TextWrapping="Wrap" FontWeight="DemiBold" />
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Border>


            <Border Grid.Column="1" Background="#F0FFFFFF" Padding="5">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Orientation}" Value="Vertical">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Viewbox Stretch="Uniform" VerticalAlignment="Center" MouseMove="Viewbox_MouseMove" MouseLeave="Viewbox_MouseLeave">
                    <ContentControl Grid.Row="1" Content="{Binding Path=CurrentVerticalControl}" Background="#10FFFFFF" />
                </Viewbox>
            </Border>
        </Grid>
    </Grid>
</local:UserControlWithMessage>
